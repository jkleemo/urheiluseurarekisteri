package seurarekisteri.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import seurarekisteri.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2021.04.14 10:40:44 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class JasenTest {



  // Generated by ComTest BEGIN
  /** testRekisteroi31 */
  @Test
  public void testRekisteroi31() {    // Jasen: 31
    Jasen jasen1 = new Jasen(); 
    assertEquals("From: Jasen line: 33", 0, jasen1.getJasenID()); 
    jasen1.rekisteroi(); 
    Jasen jasen2 = new Jasen(); 
    jasen2.rekisteroi(); 
    int n1 = jasen1.getJasenID(); 
    int n2 = jasen2.getJasenID(); 
    assertEquals("From: Jasen line: 39", n2-1, n1); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testClone53 
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testClone53() throws CloneNotSupportedException {    // Jasen: 53
    Jasen jasen = new Jasen(); 
    jasen.parse("   1  |  Ville Vallaton   | 1111111"); 
    Jasen clone = jasen.clone(); 
    assertEquals("From: Jasen line: 58", jasen.toString(), clone.toString()); 
    jasen.parse("   4  |  Ville Vallallinen   | 2222222"); 
    assertEquals("From: Jasen line: 60", false, clone.toString().equals(jasen.toString())); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAseta134 */
  @Test
  public void testAseta134() {    // Jasen: 134
    Jasen jasen = new Jasen(); 
    assertEquals("From: Jasen line: 136", null, jasen.aseta(1,"Jouko Joukkio")); 
    assertEquals("From: Jasen line: 137", "Postinumerossa on vain numeroita!", jasen.aseta(4,"hemmo")); 
    assertEquals("From: Jasen line: 138", null, jasen.aseta(4,"12345")); 
    assertEquals("From: Jasen line: 139", "Puhelinnumerossa on vain numeroita!", jasen.aseta(6,"hippi")); 
    assertEquals("From: Jasen line: 140", null, jasen.aseta(6,"12345")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString206 */
  @Test
  public void testToString206() {    // Jasen: 206
    Jasen jasen = new Jasen(); 
    jasen.parse("   1  |  Jouko Jii   | 123445-1212"); 
    assertEquals("From: Jasen line: 209", true, jasen.toString().startsWith("1|Jouko Jii|123445-1212|")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testParse232 */
  @Test
  public void testParse232() {    // Jasen: 232
    Jasen jasen = new Jasen(); 
    jasen.parse("   1  |  Jouko Jii   | 123445-1212"); 
    assertEquals("From: Jasen line: 235", 1, jasen.getJasenID()); 
    assertEquals("From: Jasen line: 236", true, jasen.toString().startsWith("1|Jouko Jii|123445-1212|")); 
    jasen.rekisteroi(); 
    int n = jasen.getJasenID(); 
    jasen.parse(""+(n+10)); 
    jasen.rekisteroi(); 
    assertEquals("From: Jasen line: 242", n+10+1, jasen.getJasenID()); 
  } // Generated by ComTest END
}